kube-prometheus-stack:
  alertmanager:
    alertmanagerSpec:
      alertmanagerConfigMatcherStrategy:
        type: None

  crds:
    enabled: false

  grafana:
    global:
      dnsService: rke2-coredns-rke2-coredns

    service:
      type: NodePort
      nodePort: 30000

    sidecar:
      alerts:
        enabled: true
        searchNamespace: ALL
        resource: configmap
      dashboards:
        enabled: true
        searchNamespace: ALL
        resource: configmap
      datasources:
        enabled: true
        searchNamespace: ALL
        # resource can be secrets and configmaps
      notifiers:
        enabled: true
        searchNamespace: ALL
        resource: secret

    # Sets to nil, as kube-prometheus-stack hardcodes it
    adminPassword:
    admin:
      existingSecret: grafana-admin
      userKey: admin-user
      passwordKey: admin-password

    smtp:
      existingSecret: grafana-smtp
      userKey: user
      passwordKey: password

  kubelet:
    serviceMonitor:
      cAdvisorRelabelings:
        - action: replace
          replacement: loki
          targetLabel: cluster
        - targetLabel: metrics_path
          sourceLabels:
            - "__metrics_path__"
        - targetLabel: "instance"
          sourceLabels:
            - "node"

  defaultRules:
    additionalRuleLabels:
      cluster: loki

  "kube-state-metrics":
    prometheus:
      monitor:
        relabelings:
          - action: replace
            replacement: loki
            targetLabel: cluster
          - targetLabel: "instance"
            sourceLabels:
              - "__meta_kubernetes_pod_node_name"

  "prometheus-node-exporter":
    prometheus:
      monitor:
        relabelings:
          - action: replace
            replacement: loki
            targetLabel: cluster
          - targetLabel: "instance"
            sourceLabels:
              - "__meta_kubernetes_pod_node_name"

  prometheus:
    monitor:
      relabelings:
        - action: replace
          replacement: loki
          targetLabel: cluster

    # By default, Prometheus only discovers PodMonitors
    # within its own namespace. This should be disabled by setting
    # podMonitorSelectorNilUsesHelmValues to false.
    prometheusSpec:
      # ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      # probeSelectorNilUsesHelmValues: false
      # scrapeConfigSelectorNilUsesHelmValues: false
